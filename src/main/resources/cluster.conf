akka {
  actor {
    provider = cluster
    serialization-bindings {
      "sample.CborSerializable" = jackson-cbor
    }
  }
  remote.artery {
    canonical.port = ${CANONICAL_PORT}
  }

  cluster {
    downing-provider-class = "akka.cluster.sbr.SplitBrainResolverProvider"

    shutdown-after-unsuccessful-join-seed-nodes = 120s

    sharding {
      least-shard-allocation-strategy.rebalance-absolute-limit = 20
    }
  }
}
akka.management{
  cluster.bootstrap.contact-point-discovery {
    service-name = "my-service"
    discovery-method = config
    # boostrap filters ports with the same IP assuming they are previous instances running on the same node
    # unless a port is specified
    port-name = "management"
    required-contact-point-nr = 1
    # config service discovery never changes
    stable-margin = 1 ms
    # bootstrap without all the nodes being up
    contact-with-all-contact-points = false
  }
  http{
    hostname = "127.0.0.1"
    port = ${MANAGE_PORT}
  }
}